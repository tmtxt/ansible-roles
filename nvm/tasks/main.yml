---
- name: install nvm dependencies
  sudo: yes
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - git
    - curl
    - build-essential
    - libssl-dev
  tags: nvm

- name: check if nvm installed
  sudo: yes
  sudo_user: "{{nvm.user}}"
  stat: path=~/.nvm
  register: nvm_path
  changed_when: False

- name: install nvm
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  git: repo=https://github.com/creationix/nvm.git dest=~/.nvm version={{ nvm.version }}
  when: not nvm_path.stat.exists
  tags: nvm

- name: source nvm in ~/.profile
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  lineinfile: >
    dest=~/.profile
    line="source ~/.nvm/nvm.sh"
  tags: nvm

- name: check current user shell
  sudo: yes
  sudo_user: "{{nvm.user}}"
  shell: "getent passwd {{nvm.user}} | cut -d: -f7"
  register: node_user_shell
  changed_when: False

- name: change user shell to bash
  sudo: yes
  user: name={{nvm.user}} shell=/bin/bash
  changed_when: False

- name: check installed node version
  command: sudo -iu {{nvm.user}} nvm ls
  register: nvm_install_result
  changed_when: False
  ignore_errors: True

- name: install nodejs using nvm
  command: sudo -iu {{ nvm.user }} nvm install {{ nvm.node_version }}
  when: nvm_install_result|failed or nvm_install_result.stdout.find('{{nvm.node_version}}') == -1
  tags: nvm

- name: check the default nodejs version
  shell: sudo -iu {{ nvm.user }} nvm ls | grep -e 'default -> {{ nvm.node_version }}'
  register: nvm_check_default
  changed_when: False
  ignore_errors: True
  tags: nvm

- name: set default node version
  command: sudo -iu {{ nvm.user }} nvm alias default {{ nvm.node_version }}
  when: nvm_check_default|failed
  tags: nvm

- name: change back to user default shell
  sudo: yes
  user: name={{nvm.user}} shell={{node_user_shell.stdout}}
  changed_when: False
